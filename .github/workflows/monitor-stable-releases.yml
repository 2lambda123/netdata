---
name: Monitor-stable-releases

#on:
#  release:
#    types: [released]


concurrency: # This keeps multiple instances of the job from running concurrently for the same ref and event type.
  group: release-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  update-stable-agents-metadata:
    name: update-stable-agents-metadata
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.NETDATABOT_GITHUB_TOKEN }}
      - name: Update latest packaged version
        id: create-latest-versions-metadata
        run: |
          sh .github/scripts/update-latests-per-major-version.sh $(cat packaging/version)
      - name: Commit Changes
        id: commit
        if: steps.create-latest-versions-metadata.outputs.run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.NETDATABOT_GITHUB_TOKEN }}
        run: |
          git config user.name "netdatabot"
          git config user.email "bot@netdata.cloud"
          git add packaging/agent-metadata/stable
          git commit -m "[ci skip] Update the latest major version published"
      - name: Failure Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: 'Failed to prepare changelog:'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: |-
              ${{ github.repository }}: Failed to update stable Agent's metadata.
              Checkout: ${{ steps.checkout.outcome }}
              Fetching latest stable releases: ${{ steps.fetch-latest-stable.outcome }}
              Commit changes: ${{ steps.commit.outcome }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()
